name: Deploy Production

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/noteforge:${{ github.sha }}

      - name: Deploy on AWS EC2
        run: |
          # Save the SSH key to a file
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
          chmod 600 ssh_key

          # SSH into EC2 and run commands
          ssh -o StrictHostKeyChecking=no -i ssh_key ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            APP_DIR=~/noteforge
            IMAGE_TAG=${{ github.sha }}
            cd $APP_DIR

          echo "Pulling new image..."
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/noteforge:$IMAGE_TAG

          echo "Updating docker-compose.prod.yml with new image tag..."
          sed -i "0,/image:/s|image:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/noteforge:$IMAGE_TAG|" docker-compose.prod.yml

          echo "Stopping and removing old container..."
          docker compose --env-file .env -f docker-compose.prod.yml down || true

          echo "Starting new container..."
           docker compose --env-file .env -f docker-compose.prod.yml up -d

          echo "Cleaning up old images..."
          docker image prune -af || true
          EOF
